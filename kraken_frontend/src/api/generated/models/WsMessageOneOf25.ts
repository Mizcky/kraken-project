/* tslint:disable */
/* eslint-disable */
/**
 * kraken
 * The core component of kraken-project
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Change } from './Change';
import {
    ChangeFromJSON,
    ChangeFromJSONTyped,
    ChangeToJSON,
} from './Change';
import type { EditorTarget } from './EditorTarget';
import {
    EditorTargetFromJSON,
    EditorTargetFromJSONTyped,
    EditorTargetToJSON,
} from './EditorTarget';
import type { SimpleUser } from './SimpleUser';
import {
    SimpleUserFromJSON,
    SimpleUserFromJSONTyped,
    SimpleUserToJSON,
} from './SimpleUser';

/**
 * A finding definition was updated
 * @export
 * @interface WsMessageOneOf25
 */
export interface WsMessageOneOf25 {
    /**
     * 
     * @type {Change}
     * @memberof WsMessageOneOf25
     */
    change: Change;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WsMessageOneOf25
     */
    user: SimpleUser;
    /**
     * 
     * @type {EditorTarget}
     * @memberof WsMessageOneOf25
     */
    target: EditorTarget;
    /**
     * 
     * @type {string}
     * @memberof WsMessageOneOf25
     */
    type: WsMessageOneOf25TypeEnum;
}


/**
 * @export
 */
export const WsMessageOneOf25TypeEnum = {
    EditorChangedContent: 'EditorChangedContent'
} as const;
export type WsMessageOneOf25TypeEnum = typeof WsMessageOneOf25TypeEnum[keyof typeof WsMessageOneOf25TypeEnum];


/**
 * Check if a given object implements the WsMessageOneOf25 interface.
 */
export function instanceOfWsMessageOneOf25(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "change" in value;
    isInstance = isInstance && "user" in value;
    isInstance = isInstance && "target" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function WsMessageOneOf25FromJSON(json: any): WsMessageOneOf25 {
    return WsMessageOneOf25FromJSONTyped(json, false);
}

export function WsMessageOneOf25FromJSONTyped(json: any, ignoreDiscriminator: boolean): WsMessageOneOf25 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'change': ChangeFromJSON(json['change']),
        'user': SimpleUserFromJSON(json['user']),
        'target': EditorTargetFromJSON(json['target']),
        'type': json['type'],
    };
}

export function WsMessageOneOf25ToJSON(value?: WsMessageOneOf25 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'change': ChangeToJSON(value.change),
        'user': SimpleUserToJSON(value.user),
        'target': EditorTargetToJSON(value.target),
        'type': value.type,
    };
}

